{
  "status": 0,
  "message": "success",
  "data": {
    "id": 36,
    "title": "定向字段翻译",
    "method": "post",
    "path": "/fieldinfo",
    "namespace": "联通",
    "description": "定向字段翻译",
    "delay": null,
    "schema": "function({_req}) {\n  let values = Object.values(_req.body);\n  while (values.some(Array.isArray)) {\n    values = [].concat(...values);\n  }\n  let number = values.length * 100;\n  number = \"约\" + number + \"用户\";\n  const keys = Object.keys(_req.body);\n  const fieldsMap1 = {\n        target_genders: {\n          label: '性别',\n          '0': '不限',\n          '1': '男',\n          '2': '女',\n        },\n        target_user_os: {\n          label: '投放平台',\n          '0': '不限',\n          '1': '安卓',\n          '2': 'IOS',\n          '3': 'PC',\n          '4': '其他',\n        },\n        target_user_network: {\n          label: '设备信号',\n          '0': 'WIFI',\n          '1': '5/4G',\n          '2': '3/2G',\n        },\n        target_login_frequency: {\n          label: '登录频次',\n          '0': '不限',\n          '1': '低频',\n          '2': '中频',\n          '3': '高频',\n        },\n        fe_user_device: {\n          label: '手机品牌',\n          '0': '不限',\n          '1': '按品牌'\n        },\n        target_mobile_price: {\n          label: '手机价格',\n          '0': '不限',\n          '1': '1500以下',\n          '2': '1500-2500',\n          '3': '2500-3500',\n          '4': '3500以上',\n        },\n        target_user_device: {\n          label: '品牌',\n          '0': 'iPhone',\n          '1': '小米',\n          '2': '魅族',\n          '3': '高频',\n        },\n        target_new_account_type: {\n          label: '新用户',\n          '0': '不限',\n          '1': '一个月以内',\n          '2': '一到三个月',\n          '3': '三个月以上',\n        },\n        target_is_qualifier: {\n          label: '高质量人群',\n          '0': '不投放',\n          '1': '投放',\n        },\n      };\n      const fieldsMap2 = {\n        schedule_date: {\n          '1': '星期一',\n          '2': '星期二',\n          '3': '星期三',\n          '4': '星期四',\n          '5': '星期五',\n          '6': '星期六',\n          '7': '星期七',\n        },\n        fe_daily_budget_type: {\n          label: '预算',\n          '0': '不限',\n          '1': '指定预算'\n        },\n        billing_type: {\n          label: '计费模式',\n          '0': 'CPM'\n        },\n        daily_budget: {\n          label: '预算费用',\n        },\n        bid_amount: {\n          label: '出价'\n        },\n        schedule_daily_delivery_type: {\n          label: '时段类型',\n          '0': '全时段',\n          '1': '指定时段'\n        },\n        schedule_delivery_speed: {\n          label: '投放方式',\n          '0': '优先跑量',\n          '1': '匀速投放'\n        },\n        schedule_delivery_type: {\n          label: '投放排期',\n          '0': '即日起长期投放',\n          '1': '指定开始结束日期'\n        },\n        fe_schedule_range: {\n          label: '日期'\n        },\n        target_is_enlarge: {\n          label: '自动扩量',\n          'true': '开启',\n          'false': '关闭'\n        }\n      };\n      let fieldsMap;\n      if (_req.query.type==1) {\n        fieldsMap = fieldsMap1;\n      } else if (_req.query.type==2) {\n        fieldsMap = fieldsMap2;\n      } else {\n        fieldsMap = {...fieldsMap1, ...fieldsMap2};\n      }\n      const result = {};\n      keys.forEach(function(key) {\n        if (fieldsMap[key]) {\n          const values = _req.body[key];\n          let text = [];\n          if (key == 'schedule_date') {\n            Object.keys(values).forEach(i => {\n              const first = values[i][0];\n              const last = values[i][values[i].length - 1];\n              text.push(`${fieldsMap.schedule_date[i]} ${first}:00-${last}:00`);\n            });\n            if (!text.length) {\n              return;\n            }\n            return result[key] = {\n              label: '投放时段',\n              text: text.join('，')\n            };\n          }\n          if (Object.prototype.toString.call(values) === '[object Array]') {\n            values.forEach(function(item) {\n              text.push(fieldsMap[key][item]?fieldsMap[key][item]:item);\n            });\n            text = text.join('，');\n          } else {\n            text = fieldsMap[key][values] || values\n          }\n          if (!text) {\n            return;\n          }\n          result[key] = {\n            label: fieldsMap[key].label,\n            text: text\n          }\n        }\n      });\n\n      return {\n        number,\n        fields: result\n      };\n}",
    "createdBy": "admin",
    "createdAt": "2024-03-30T01:54:35.000Z",
    "updatedAt": "2024-03-30T01:54:35.000Z"
  }
}